
<head>
<title>Dashboard</title>
</head>


<div class="ra-doc">

<h1>Welcome to the MimeCas RapidApp Demo!</h1>

<p>This is an example application providing a front-end for the "MimeCas" DBIC schema using the new "RapidApp" framework. The database has been loaded with some sample data (messages from various Perl-based mailing lists) in order to showcase some of the functionality of the framework.</p>

<p>Click the items on the left to explore the application and database, or, start here:</p>

<ul><li><b>
<a href="#!/main/db/schema_mailbox">Browse Mailboxes (Lists)</a>
</b>
</li></ul>


<h2>What is RapidApp?</h2>

<p>RapidApp is an open-source application framework that is currently under development for quickly building dynamic Web 2.0/AJAX interfaces for various data models.</p>

<h3 style="padding-left:5px;">
  For more information, see: <a href="#!/main/page?file=rapidapp/about_rapidapp.tt">About RapidApp</a>
</h3>



<p>This demo showcases some features that can be easily built using RapidApp, such as saved views, automatic authentication db, navigation trees, and so on. Explore the app by clicking the items on the left. </p>

<h2>What is MimeCas?</h2>

<p>MimeCas is a simple DBIC schema/data-model for storing <a target="_blank" href="http://en.wikipedia.org/wiki/MIME">MIME</a> objects. MIME objects are E-Mail messages, images, content parts and other types of attachments. The word "Cas" is in the name because it uses a <a target="_blank" href="http://en.wikipedia.org/wiki/Content_addressed_storage">Content-Addressed Storage</a> design to store the MIME objects, similar to <a target="_blank" href="http://git-scm.com/">Git</a>. In a CAS database the keys are checksums of content, which provides many intrensic benefets, such as automatic de-duplication, global namespaces and elimination of caching issues.</p>

<p>Individual MIME "Parts" are stored according to their SHA1 checksum. Multipart MIME objects contain referecnes to the SHA1s of their subparts, rather than the actual content. This creates a tree structure much like the structure of Git commits and tree (directory) objects.</p>

<p>If you are not familiar Git's wonderful design and Content-Addressed Storage concepts, I suggest you read my Linux Jounral Article on the topic: <a target="_blank" href="http://www.linuxjournal.com/content/git-revision-control-perfected">Git - Revision Control Perfected</a> (2011)</p>

<p>In addition to the core MIME storage model, there is also a Mailbox/Folder/Message structure that provides a context for the objects. </p>

<p>This schema is just an example to showcase a DBIC schema that can be loaded with some nice test data (E-Mails). It has been loaded with "Mailboxes" referencing various mailing lists, with "Folders" representing Individual monthly Pipermail archive files containing "Messages"</p>

<div style="padding:10px;">
  <h4>Result Classes</h4>

  <ul>
  [% FOREACH s IN c.model('Schema').schema.sources() %]

  <li><b>
  <a href="#!/main/page?file=lib/MimeCas/Schema/Result/[% s %].pm">[% s %].pm</a>
  </b>
  </li>
  [% END %]
  </ul>
</div>

<h2>Application Config</h2>

This application config is automatically generated using the "RapidDbic" Catalyst plugin which automatically sets up Grid views and object pages for super-fast setup. Besides the above Schema classes and associated Catalyst DBIC model (generated using S::L), the entire configuration of this application is contained in the main Catalyst class/package file:

<ul><li><b>
<a href="#!/main/page?file=lib/MimeCas.pm">lib/MimeCas.pm</a>
</b>
</li></ul>

<p>There is also one Controller that is specific to this application which provides the MIME viewer ('View' links). This is a pure-Catalyst controller and is not specific to RapidApp:</p>

<ul>
<li><b>
<a href="#!/main/page?file=lib/MimeCas/Controller/Mime.pm">lib/MimeCas/Controller/Mime.pm</a>
</b>
</li>
<li><b>
<a href="#!/main/page?file=lib/Catalyst/Controller/MIME.pm">lib/Catalyst/Controller/MIME.pm</a>
</b>
</li>
</ul>

<br><br>

</div>

